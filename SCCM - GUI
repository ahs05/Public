# Load WinForms
Add-Type -AssemblyName System.Windows.Forms

# Create form
$form = New-Object System.Windows.Forms.Form
$form.Text = "SCCM Collection Manager"
$form.Size = New-Object System.Drawing.Size(400, 200)
$form.StartPosition = "CenterScreen"

# Create Labels and TextBoxes
$label1 = New-Object System.Windows.Forms.Label
$label1.Location = New-Object System.Drawing.Point(20, 20)
$label1.Size = New-Object System.Drawing.Size(100, 20)
$label1.Text = "Computer 1:"

$txtComputer1 = New-Object System.Windows.Forms.TextBox
$txtComputer1.Location = New-Object System.Drawing.Point(120, 20)
$txtComputer1.Size = New-Object System.Drawing.Size(200, 20)

$label2 = New-Object System.Windows.Forms.Label
$label2.Location = New-Object System.Drawing.Point(20, 60)
$label2.Size = New-Object System.Drawing.Size(100, 20)
$label2.Text = "Computer 2:"

$txtComputer2 = New-Object System.Windows.Forms.TextBox
$txtComputer2.Location = New-Object System.Drawing.Point(120, 60)
$txtComputer2.Size = New-Object System.Drawing.Size(200, 20)

# Create a Button to Fetch Collections
$btnFetch = New-Object System.Windows.Forms.Button
$btnFetch.Location = New-Object System.Drawing.Point(120, 100)
$btnFetch.Size = New-Object System.Drawing.Size(80, 30)
$btnFetch.Text = "Fetch"

# Create a Button to Add to Collections
$btnAdd = New-Object System.Windows.Forms.Button
$btnAdd.Location = New-Object System.Drawing.Point(240, 100)
$btnAdd.Size = New-Object System.Drawing.Size(80, 30)
$btnAdd.Text = "Add"

# Function to fetch collections of Computer 1
$btnFetch.Add_Click({
    $computer1 = $txtComputer1.Text
    if ([string]::IsNullOrEmpty($computer1)) {
        [System.Windows.Forms.MessageBox]::Show("Please enter Computer 1.")
        return
    }
    
    # Connect to SCCM site
    cd "C:\Program Files (x86)\Microsoft Configuration Manager\AdminConsole\bin"
    Import-Module .\ConfigurationManager.psd1

    $siteCode = "ABC"  # Replace with your site code
    cd "$siteCode:"

    # Get collections for Computer 1
    $collections = Get-CMDeviceCollection | Where-Object {
        Get-CMDeviceCollectionMembership -CollectionId $_.CollectionId | Where-Object {
            $_.Name -eq $computer1
        }
    }

    if ($collections.Count -eq 0) {
        [System.Windows.Forms.MessageBox]::Show("No collections found for Computer 1.")
    } else {
        $global:staticCollections = $collections | Where-Object { $_.LimitingCollectionId -ne $null } # Static collections only
        [System.Windows.Forms.MessageBox]::Show("Collections fetched successfully.")
    }
})

# Function to add Computer 2 to the collections of Computer 1
$btnAdd.Add_Click({
    $computer2 = $txtComputer2.Text
    if ([string]::IsNullOrEmpty($computer2)) {
        [System.Windows.Forms.MessageBox]::Show("Please enter Computer 2.")
        return
    }
    
    if (-not $global:staticCollections) {
        [System.Windows.Forms.MessageBox]::Show("No collections to add. Please fetch collections first.")
        return
    }

    # Add Computer 2 to the collections of Computer 1
    foreach ($collection in $global:staticCollections) {
        Add-CMDeviceCollectionDirectMembershipRule -CollectionId $collection.CollectionId -ResourceName $computer2
    }

    [System.Windows.Forms.MessageBox]::Show("Computer 2 added to all static collections of Computer 1.")
})

# Add Controls to the Form
$form.Controls.Add($label1)
$form.Controls.Add($txtComputer1)
$form.Controls.Add($label2)
$form.Controls.Add($txtComputer2)
$form.Controls.Add($btnFetch)
$form.Controls.Add($btnAdd)

# Show the Form
$form.ShowDialog()
