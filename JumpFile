https://www.kb.ischool.uw.edu/2022/02/04/set-up-ischool-issued-windows-computer/

https://www.bleepingcomputer.com/news/microsoft/microsoft-fixes-print-to-pdf-feature-broken-by-windows-update/

https://www.catalog.update.microsoft.com/Search.aspx?q=KB5060829

$escapedProfileDir = [regex]::Escape($ProfilesDirectory)
$Username = $UserProfile.LocalPath -replace "^$escapedProfileDir\\", ''


foreach ($UserProfile in $UserProfiles) {
    $LastLogonDate = $UserProfile.LastUseTime

    if ($LastLogonDate) {
        $LastLogonDate = [datetime]$LastLogonDate
        $DaysSinceLastLogon = ((Get-Date) - $LastLogonDate).Days
    } else {
        $DaysSinceLastLogon = "Never Logged In"
    }

    $escapedProfileDir = [regex]::Escape($ProfilesDirectory)
    $Username = $UserProfile.LocalPath -replace "^$escapedProfileDir\\", ''

    Write-Output "$Username last logged in $DaysSinceLastLogon days ago"
}



$DaysSinceLastLogon = [math]::Round(((Get-Date) - $LastLogonDate).TotalDays)

foreach ($UserProfile in $UserProfiles) {
    $LastLogonDate = $UserProfile.LastUseTime

    if ($LastLogonDate) {
        $LastLogonDate = [datetime]$LastLogonDate
        $TimeSpan = (Get-Date) - $LastLogonDate

        if ($TimeSpan.TotalDays -ge 1) {
            $DaysSinceLastLogon = "{0:N2} days ago" -f $TimeSpan.TotalDays
        } elseif ($TimeSpan.TotalHours -ge 1) {
            $DaysSinceLastLogon = "{0:N1} hours ago" -f $TimeSpan.TotalHours
        } else {
            $DaysSinceLastLogon = "{0:N0} minutes ago" -f $TimeSpan.TotalMinutes
        }
    } else {
        $DaysSinceLastLogon = "Never Logged In"
    }

    $escapedProfileDir = [regex]::Escape($ProfilesDirectory)
    $Username = $UserProfile.LocalPath -replace "^$escapedProfileDir\\", ''

    Write-Output "$Username last logged in $DaysSinceLastLogon"
}

------------
$excludeUsers = @("P7832", "Admin", "PCadmin")

Get-WmiObject Win32_UserProfile |
Where-Object {
    $_.LastUseTime -lt (Get-Date).AddDays(-30) -and
    $_.Special -eq $false -and
    ($excludeUsers -notcontains ($_.LocalPath.Split('\')[-1]))
} |
ForEach-Object {
    Write-Host "Deleting profile for $($_.LocalPath)" -ForegroundColor Yellow
    $_.Delete()
}
